"use strict"

// 执行 dom 元素拖拽前做的事情
var handleTouchStart = function(e) {
  var obj = e.instance.getState();
  var domDataset = e.instance.getDataset();
  var domBCR = e.instance.getBoundingClientRect();
  // 设置相关信息
  obj.windowHeight = domDataset.windowHeight;
  obj.windowWidth = domDataset.windowWidth;
  obj.height = domBCR.height;
  obj.width = domBCR.width;
  obj.domRight = obj.windowWidth - domBCR.right;
  obj.domBottom = obj.windowHeight - domBCR.bottom;
  obj.mouseStartLeft = e.touches[0].pageX;
  obj.mouseStartTop = e.touches[0].pageY;
}

// 控制 dom 元素的拖动
// dataset 包含设备的宽高和控制的 dom 的宽高
var handleTouchMove = function(e) {
  var obj = e.instance.getState();
  var leftAdd = e.touches[0].pageX - obj.mouseStartLeft;
  var topAdd = e.touches[0].pageY - obj.mouseStartTop;
  e.instance.setStyle({
    'left': obj.windowWidth - obj.width - obj.domRight + leftAdd + 'px',
    'top': obj.windowHeight - obj.height - obj.domBottom + topAdd + 'px'
  })
  return false;
}

// 执行 dom 元素拖拽之后的事情
var handleTouchEnd = function(e) {
  // dom 元素拖拽结束后，将 dom 元素在一定时间内移至最短的安全区域内
  // 这里默认是屏幕右侧，且 top 和 bottom 不低于 100px， left 或 right 为 50px
  var domBCR = e.instance.getBoundingClientRect(), obj = e.instance.getState();
  var left = domBCR.left, top = domBCR.top;
  var leftAdd = 0, topAdd = 0, leftRes, topRes;
  if(left > (obj.windowWidth - obj.width) / 2) {
    leftRes = obj.windowWidth - 50 - obj.width;
    if(left > obj.windowWidth - obj.width - 50)
      leftAdd = -8;
    else leftAdd = 8;
  }
  else {
    leftRes = 50;
    if(left < 50)
      leftAdd = 8;
    else leftAdd = -8;
  }
  if(top > obj.windowHeight - obj.height - 100) {
    topRes = obj.windowHeight - 100 - obj.height;
    topAdd = -8;
  }
  else if(top < 100) {
    topRes = 100;
    topAdd = 8;
  }
  else topRes = top;
  var render = function() {
    if(left === leftRes && top === topRes)
      return;
    left += leftAdd;
    top += topAdd;
    left = leftAdd > 0 
      ? left > leftRes? leftRes: left
      : left < leftRes? leftRes: left;
    top = topAdd > 0
      ? top > topRes? topRes: top
      : top < topRes? topRes: top;
    e.instance.setStyle({
      left: left + 'px',
      top: top + 'px'
    })
    flag = false;
    e.instance.requestAnimationFrame(render);
  }
  e.instance.requestAnimationFrame(render);
}

module.exports = {
  handleTouchMove: handleTouchMove,
  handleTouchStart: handleTouchStart,
  handleTouchEnd: handleTouchEnd
}